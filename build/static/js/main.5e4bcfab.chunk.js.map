{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","constants/noC.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/RoundDisplay.js","components/Home/TimeDisplay.js","components/Home/CoInfo.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","company","num","app","initializeApp","this","database","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","submit","contents","confirmAlert","title","message","buttons","label","state","action","setValue","value","setState","listener","onAuthStateChanged","authUser","on","snapshot","console","log","val","isdisplayed","alert","Provider","withAuthorization","condition","WithAuthorization","history","push","actions","compose","withRouter","Navigation","loading","sample","NavigationAuth","to","SignOut","NavigationNonAuth","LandingPage","style","color","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","mountInfo2","i","amountMoney","then","set","asset","mountInfo","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","RoundDisplay","round","caniinvest","TimeDisplay","format","ticking","timezone","CoInfo","handleReset","money","onwilldoChange","Conum","investsubmit","answer","handleInvest","a","transaction","post","Number","confirm","handleWithdraw","Math","floor","roundfees","companyObject","JSON","stringify","survive","Coname","HomePage","nextRound","willdo","nextProps","nextState","usersObject","usersList","Object","keys","map","key","companies","sum","sum2","item","undefined","border","PasswordChangeForm","AccountPage","PasswordChange","AdminPage","off","UserList","exact","path","component","className","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e4bcfab.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/database';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD04Vcwcek6_LcZepFgGNXLAs2cq3TP3SU\",\n  authDomain: \"investment-game-hyeonsu1984.firebaseapp.com\",\n  databaseURL: \"https://investment-game-hyeonsu1984.firebaseio.com\",\n  projectId: \"investment-game-hyeonsu1984\",\n  storageBucket: \"investment-game-hyeonsu1984.appspot.com\",\n  messagingSenderId: \"137734982819\",\n  appId: \"1:137734982819:web:07e4a9527e7aa5525e0316\",\n  measurementId: \"G-3M0BH7W64D\"\n};\nclass Firebase {\n  constructor() {\n    //console.log(firebaseConfig.apiKey);\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.database();\n    \n  }\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n  doSignOut = () => this.auth.signOut();\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  user = (uid) => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref('users/');\n  company=(num)=>this.db.ref(`companies/${num}`)\n\n}\nexport default Firebase;","\nimport FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext,withFirebase};","import React from 'react';\nimport { withFirebase } from '../Firebase';\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\nexport default withFirebase(SignOutButton);","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        \n      };\n      this.action = {\n        setValue: (value) => {\n          this.setState({ value });\n        }\n      }\n    }\n    submit = (contents) => {\n      confirmAlert({\n        title: 'Notice',\n        message: `${contents}`,\n        buttons: [\n          {\n            label: 'Ok',\n            onClick: () => {}\n          },\n        ]\n      });\n    };\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        }\n      );\n\n      this.props.firebase.db.ref('/notices').on('value',(snapshot)=>\n          {\n            console.log('withAuth changed');\n            const {isdisplayed,contents}=snapshot.val();\n            if(isdisplayed==true){\n             // this.submit(contents);\n              alert(contents);\n            }\n         //   this.setState({isdisplayed:isdisplayed,contents:contents})\n          });\n\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n     // var a=3/2;\n     // console.log(a);\n      const { state, action } = this;\n      const value = { state, action };\n      return (\n        <AuthUserContext.Provider value={value}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {\n            ({ state, actions }) => {\n              return (condition(state.authUser) ? <Component {...this.props} state={state} actions={actions}/> : null);\n            }\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\nexport default withAuthorization;","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport {AuthUserContext} from '../Session' ;\nclass Navigation extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state={\n      loading:true\n    }\n  }\n  render(){\n    return(\n   <AuthUserContext.Consumer>\n      {sample =>\n        sample.state.authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n    );\n  }\n}\nconst NavigationAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>UserList</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\nexport default Navigation;","import React from 'react';\nconst LandingPage = () => (\n  <div>\n    <h1>Welcome to ICISTS Investment Game!</h1>\n    <p style={{color:'red'}}>To sign in, please click on the 'Sign In' link at the top.</p>\n\n    <p>\bthis is explanation of ICISTS Investment Game...</p>\n  </div>\n);\nexport default LandingPage;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport noC from '../../constants/noC'\nimport adminUID from '../Session/adminUID'\n\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n      <SignUpForm />\n  </div>\n);\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    var mountInfo2={};\n    for(var i=0;i<noC;i++){\n\n      mountInfo2={...mountInfo2, [i]:{amountMoney:0}};\n    }\n  // console.log(JSON.stringify(mountInfo2));\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            asset:1000,\n            mountInfo:mountInfo2,\n          });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        //this.props.firebase.auth.signOut()\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  }\n\n    onChange = event => {\n      this.setState({ [event.target.name]: event.target.value });\n    };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n    const isInvalid =( passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '');\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\nconst condition = authUser => true ;\n//&& authUser.uid===adminUID;\n\nconst SignUpForm = withAuthorization(condition)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","const noC=8;\nexport default noC;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>Reset Password</h1>\n    <PasswordForgetForm />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email } = this.state;\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .then(()=>{alert('Check your email.');})\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nconst PasswordForgetLink = () => (\n  <p>\n    <Link style={{color:'red'}} to={ROUTES.PASSWORD_FORGET}>Reset Password?</Link>\n  </p>\n);\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","import React from 'react';\nclass RoundDisplay extends React.Component{\n    render(){\n        return(\n        <div>\n        <div>현재 {this.props.round} 라운드 진행 중 </div>\n        <div>지금 {this.props.caniinvest==true ? \"투자 가능\" : \"투자 불가능\"}</div>\n        </div>\n        );\n    }\n}\nexport default RoundDisplay;","import React from 'react';\nimport Clock from 'react-live-clock'\nclass TimeDisplay extends React.Component{\n    render(){\n        //let today = new Date().toString; \n        return(\n        <div style={{color:'blue'}}>\n            현재 시각은 <Clock format={'HH 시: mm 분: ss 초'} ticking={true} timezone={'Asia/Seoul'}/> 입니다.\n        </div>\n        );\n    }\n}\nexport default TimeDisplay;","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nclass CoInfo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            money:'',\n           \n        }\n    };\n    componentDidMount(){\n        this.props.firebase.company(this.props.Conum).on('value',snapshot=>{\n            const companyObject=snapshot.val();\n            console.log(JSON.stringify(companyObject)+' '+companyObject.survive);\n            this.setState({survive:companyObject.survive});\n        })\n    }\n    handleReset=(event)=>{\n        this.setState({money:''});\n        this.props.onwilldoChange(this.props.Conum,0);\n    }\n    Reset(){\n        this.setState({money:''});\n        this.props.onwilldoChange(this.props.Conum,0);\n    }\n    onChange=(event)=>{\n        \n        this.setState({ [event.target.name]: event.target.value });\n        this.props.onwilldoChange(this.props.Conum,event.target.value);\n    };\n    investsubmit = () => {\n        confirmAlert({\n          title: 'Check',\n          message: '투자하시겠습니까?',\n          buttons: [\n            {\n              label: 'Yes',\n              onClick: () => this.setState({answer:true})\n            },\n            {\n              label: 'No',\n              onClick: () => this.setState({answer:false})\n            }\n          ]\n        });\n      };\n    handleInvest= async(event) => {\n        if(this.state.money==''){\n        console.log('error');\n         alert('Please enter numbers only!');\n        }\n        else{\n            await this.props.firebase.user(this.props.firebase.auth.currentUser.uid).transaction((post)=>{\n                if (post) {\n                    // console.log(JSON.stringify(post));\n                    // console.log(this.props.Coname);\n                    // console.log(this.props.Conum);\n                    if(post.asset-Number(this.state.money)<0 || Number(this.state.money)<0){\n                        alert('Invaild');\n                        return(post);\n                    }\n                    const answer=window.confirm(`투자액은 ${this.state.money} 입니다. \\n투자 하시겠습니까?`);\n                    if(answer){\n                    post.mountInfo[this.props.Conum].amountMoney+=Number(this.state.money);\n                    post.asset-=Number(this.state.money);\n                    this.handleReset();\n                    return (post);\n                    }\n                }\n                return (post);\n              });\n            \n        }\n    };\n    handleWithdraw=async(event)=>{\n        if(this.state.money==''){\n        console.log('error');\n         alert('Please enter numbers only!');\n        }\n        else{\n            await this.props.firebase.user(this.props.firebase.auth.currentUser.uid).transaction((post)=>{\n                if (post) {\n                    if(post.mountInfo[this.props.Conum].amountMoney-Number(this.state.money)<0 || Number(this.state.money)<0){\n                        alert('Invaild');\n                        return(post);\n                    }\n                    const answer=window.confirm(`실질 회수액은 ${Math.floor(Number(this.state.money)*(1-this.props.roundfees))} 입니다.\\n회수 하시겠습니까?`);\n                    if(answer){\n                    post.mountInfo[this.props.Conum].amountMoney-=Number(this.state.money);\n                    console.log(this.props.roundfees);\n                    post.asset+=Math.floor(Number(this.state.money)*(1-this.props.roundfees));\n                    this.handleReset();\n                    return (post);\n                    }\n                }\n                return (post);\n              });\n            \n        }\n    }\n    \n    render(){\n      //  console.log(this.state);\n        return(\n        <tr>\n        <td>{this.props.Coname}</td>\n        <td>{this.props.amountMoney}</td>\n        <td><input\n          name=\"money\"\n          type='number'\n          value={this.state.money}\n          onChange={this.onChange}\n          placeholder=\"0\"\n        /></td>\n\n        <td><button type=\"submit\" onClick={this.handleInvest} disabled={!this.state.survive || !this.props.caniinvest} >투자</button></td>\n        <td><button type=\"submit\" onClick={this.handleWithdraw} disabled={!this.state.survive || !this.props.caniinvest}>철회</button></td>\n        <td><button type=\"submit\" onClick={this.handleReset}>입력 초기화</button></td>\n        {/* <td><button type=\"submit\" onClick={this.arrowFunction}>Testbtn</button></td> */}\n        </tr>\n        );\n    }\n}\nexport default CoInfo;","import React from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Home.css'\nimport RoundDisplay from './RoundDisplay';\nimport TimeDisplay from './TimeDisplay';\nimport CoInfo from './CoInfo'\nimport noC from '../../constants/noC'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: \"name loading...\",\n      asset: 0,\n      round: 0,\n      willdo: [],\n      roundfees:0.05,\n    }\n    for (var i = 0; i < noC; i++)\n      this.state.willdo.push(0);\n  }\n  submit = (nextRound) => {\n    confirmAlert({\n      title: 'Notice',\n      message: `Round is changed. ${nextRound-1} Round ➝ ${nextRound} Round`,\n      buttons: [\n        {\n          label: 'Ok',\n          onClick: () => {}\n        },\n      ]\n    });\n  };\n  shouldComponentUpdate(nextProps, nextState) {\n    const nextRound=nextState.round;\n    if (this.state.round != 0 && nextState.round != this.state.round) {\n      alert(`Round is changed. \\n${nextRound-1} Round ➝ ${nextRound} Round`);\n     // this.submit(nextState.round);\n    }\n    return true;\n  }\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.props.firebase.user(this.props.firebase.auth.currentUser.uid).on('value', snapshot => {\n      const usersObject = snapshot.val();\n      this.setState({\n        username: usersObject.username,\n        asset: usersObject.asset,\n        mountInfo: usersObject.mountInfo,\n      });\n    });\n    this.props.firebase.db.ref('gamestate').on('value', snapshot => {\n      const usersObject = snapshot.val();\n      this.setState({\n        round: usersObject.round,\n        caniinvest: usersObject.caniinvest,\n        roundfees:usersObject.roundfees[usersObject.round],\n      });\n    \n    });\n    this.props.firebase.db.ref('companies').on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n      }));\n      this.setState({ companies: usersList });\n    });\n  }\n  onwilldoChange = (i, num) => {\n    const { willdo } = this.state;\n    willdo[i] = Number(num);\n    this.setState({ willdo: willdo });\n  }\n  render() {\n   // console.log(\"Home render\");\n    const { username, asset, round, caniinvest } = this.state;\n    var sum = 0;\n    var sum2 = 0;\n    var item = [];\n    for (var i = 0; i < noC; i++) {\n\n      if (this.state.companies != undefined) {\n        sum += this.state.mountInfo[i].amountMoney;\n        sum2 += this.state.willdo[i];\n      //  console.log(JSON.stringify(this.state.companies));\n        item.push(<CoInfo\n          caniinvest={this.state.caniinvest}\n          key={i}\n          Conum={i}\n          Coname={this.state.companies[i].name}\n          amountMoney={this.state.mountInfo[i].amountMoney}\n          firebase={this.props.firebase}\n          onwilldoChange={this.onwilldoChange}\n          roundfees={this.state.roundfees}\n        />);\n      }\n    }\n    //window.confirm(\"ㅑ잇\");\n\n    return (\n\n      <div>\n        <h1>{username} 님의 잔고 ${asset}</h1>\n        <RoundDisplay round={round} caniinvest={caniinvest} />\n        <TimeDisplay />\n        <table border={1}>\n          <th>기업명</th>\n          <th>누적 투자액</th>\n          <th>투자 or 회수할 금액</th>\n          {item}\n          <tr>\n            <td>Total</td>\n            <td>{sum}</td>\n            <td>{sum2}</td>\n          </tr>\n        </table>\n      </div>\n\n    );\n  }\n\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage); ","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport PasswordChangeForm from '../PasswordChange';\n\nclass AccountPage extends React.Component{\n\n  constructor(props){\n    super(props)\n  }\n  \n  render(){\n    return(\n  <AuthUserContext.Consumer>\n  {sample => (\n    <div>\n      <h1>{sample.state.authUser.username }님의 마이페이지</h1>\n      <PasswordForgetForm />\n      <PasswordChangeForm />\n    </div>\n  )}\n</AuthUserContext.Consumer>);\n  }\n\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage); ","import React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n  componentDidMount() {\n    console.log('AdminPage did mount');\n\n    this.setState({ loading: true });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n      if (usersObject == null) {\n        const usersList = [];\n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      }\n      else {\n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      }\n      \n    });\n  }\n  componentWillUnmount() {\n    console.log('AdminPage will unmount');\n    this.props.firebase.users().off();\n  }\n  render() {\n    \n\n\n    const { users, loading } = this.state;\n    return (\n      <div>\n        <h1>User List</h1>\n        {loading && <div>Loading ...</div>}\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\nconst UserList = ({ users }) => {\n  if (users == null)\n    return (<div>nothing</div>);\n  else {\n    return (\n      <ul>\n        {users.map(user => (\n          <li key={user.uid}>\n            <p>\n              <strong>Username:</strong> {user.username}\n            </p>\n            <p>\n              <strong>E-Mail:</strong> {user.email}\n            </p>\n            <p>\n              <strong> ID:</strong> {user.uid}\n            </p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AdminPage); ","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nimport './App.css'\n\n\nclass App extends React.Component{\n  render(){\n   // console.log('App');\n    return(\n  <Router>\n    <div>\n      <Navigation />\n      <hr />\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route path={ROUTES.HOME} component={HomePage} />\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\n\n      <div className = 'footerheight'></div>\n      <footer><div className =\"copyrightFooter\"> N13-1, KAIST 291 DAEHAK-RO, YUSEONG-GU, DAEJEON, KOREA<br></br>\nCopyright @ 2020 ICISTS Div. Tech & Design</div></footer> \n  \n    </div>\n  </Router>\n    );\n  }\n}\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\nReactDOM.render(<FirebaseContext.Provider value={new Firebase()}>\n    <App />\n    </FirebaseContext.Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}